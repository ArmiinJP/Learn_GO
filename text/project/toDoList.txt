در نگاه اول به نیازمندی‌ها ( حالا یا لیست یا پروتوتایپ) سعی میکنیم موجودیت‌هایی که هست را لیست کنیم.
Application
Category
Task
User
دقت بشه که این موجودیت‌ها یه‌سریش بیزینسی هستند که در واقع مربوط به نیازمند‌ی ای هست که از ما خواستند و لذا این موجودیت تبلودر پیدا کردند، یه سریش هم تکنیکال هستند، الان مثلا موجودیت application خب بله ما یه اپلکیشین میخوایم بنویسیم که یک موجودیت هست، اما نکته اینجاست که این موجودیت یک موجودیت تکنیکال هست. و فعلا کاری باهاش نداریم، و الان میخوایم موجودیت‌های بیزینسی که در واقع خواسته‌هایی که از ما خواستند را اوکی میکنه را بررسی کنیم.

قدم بعدی، این هست که در مورد پراپرتری‌های هر موجودیت و به شکل دقیقتر موجودیت‌های بیزینسی فکر بکنم.
طبق این دیزاینی که هست:
Category
 - Title
 - Color
Task
 - Title
 - DueDate تاریخ انجام
 - Category
 - IsCompleted
User
 - Id
 - email
 - password
 
قدم بعدی این هست که در مورد رفتار‌های هر موجودیت فکر کنم.
توجه بشه که این رفتار‌ها را میشه از روی User Story یا همون user case ها تشخیص داد، در واقع ما با دیدن داستانها‌ی هر کاربر که از بدو اومدن در برنامه چه کارهایی میتونه بکنه، میتونیم رفتارهای موجودیت‌های مختلف را در بیاریم: (اینجا دقیقا منظور از داستان های کاربر، همون نیازمندی‌های اصلی برنامه هست که به ما گفتند اقا من یه کاربرانم باید بتواننند....)
User Story:
 - user should be registerd to app
کاربر مثلا برنامه را نصب کنه و استفاده کنه. البته میتونه غیر نصب لاگین هم بخواد:
 - user should be able to log in to app
 - user can create a new category
 - user can add a new task
 - user can see the list of category with progress status
 - user can see today's task
 - user can see the task by date
 - user can Done/Undone a task
 - user can edited category
 - user can edited task
 
حالا که داستانها را در آوردیم، باید بریم رفتار را برای هر موجودیت مشخص کنیم
Category
 - create a new category
 - list user's categroy with progress status
 - edit category
Task
 - create a new Task
 - list user today task
 - list user task by data
 - change task status(done/undone)
 - edit task
User
 - Register User
 - Log in user
 
------------------------------------
add authentication & user entity
add category entity and validate category id in create-task process

add write user data to file
ذخیره‌‌ی اطلاعات کاربران که در رم هست در داخل فایل 

add manual incomplete serialization for storing user data in file
دخیره‌ کردن اطلاعات کاربران در فایل به کمک روش سریالینگ دستی و من در آوردی

move write user item to file functionality to separate function


add json serialization & deserialization
اضافه کردن روش json و احتمالا xml , csv برای فرمت ذخیره‌ی اطلاعات کاربران در فایل

hash the password with md5 hashing 
ذخیره‌ی پسورد کاربران در قالب هش به جای پلین ذخیره کردن آنها
serialization vs encoding
اضافه کردن روش ‌encoding به روی hasghing تا تبدیل به کارکترهای خوانا شود، مثلا base64
remove redundant examples
decouple loadUser and SaveUser logic from fileStorage
move writeUserToFile from global funct to method of fielStore type
refactor todo cli
separate server and client logic for task use-cases
add tcp server and client which supports json serialized message for communication
get server address from command arguments

